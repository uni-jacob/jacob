import os

from loguru import logger
from pony import orm
from vkwave.api import API
from vkwave.bots import Keyboard
from vkwave.client import AIOHTTPClient

from jacob.database.utils import admin, finances
from jacob.database.utils.storages import managers
from jacob.services import keyboard as kbs
from jacob.services.keyboard.common import Keyboards, StudentsNavigator
from jacob.services.logger.config import config

JSONStr = str
api_session = API(tokens=os.getenv("VK_TOKEN"), clients=AIOHTTPClient())
api = api_session.get_context()
logger.configure(**config)


class IncomeKeyboards(Keyboards):
    """–ù–∞–±–æ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ —Ä–µ–∂–∏–º–µ –î–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ—Ö–æ–¥–∞."""

    def __init__(self, admin_id: int, return_to: str):
        super().__init__(admin_id)
        self.return_to = return_to

    def menu(self) -> str:
        """
        –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–∏–∑—ã–≤–∞ (–ø–æ–ª–æ–≤–∏–Ω—ã –∞–ª—Ñ–∞–≤–∏—Ç–∞, —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å, –æ—Ç–º–µ–Ω–∏—Ç—å, –∏–∑–º–µ–Ω–∏—Ç—å).

        Returns:
            str: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        """
        kb = kbs.common.alphabet(self.admin_id)
        store = managers.FinancialConfigManager(self.admin_id).get_or_create()
        if len(kb.buttons[-1]):
            kb.add_row()
        kb.add_text_button(
            text="üö´ –û—Ç–º–µ–Ω–∞",
            payload={"button": "fin_category", "category": store.financial_category.id},
        )

        return kb.get_keyboard()

    def submenu(self, half: int) -> str:
        """
        –ü–æ–¥–º–µ–Ω—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ—Ö–æ–¥–∞ (—Å–ø–∏—Å–æ–∫ –±—É–∫–≤ –≤ —Ä–∞–º–∫–∞—Ö –ø–æ–ª–æ–≤–∏–Ω—ã –∞–ª—Ñ–∞–≤–∏—Ç–∞).

        Returns:
            str: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞

        """
        kb = super().submenu(half)
        return kb

    def students(self, letter: str) -> str:
        """
        –°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–∞ –±—É–∫–≤—É.

        Args:
            letter: –ü–µ—Ä–≤–∞—è –±—É–∫–≤–∞ —Ñ–∞–º–∏–ª–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤

        Returns:
            str: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞

        """
        kb = super().students(letter)
        return kb


class IncomeNavigator(StudentsNavigator):
    def __init__(self, admin_id: int):
        super().__init__(admin_id)
        self.return_to = "add_income"

    def render(self):
        return IncomeKeyboards(self.admin_id, self.return_to)


def list_of_fin_categories(admin_id: int) -> JSONStr:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π.

    Args:
        admin_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

    Returns:
        JSONStr: –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """
    kb = Keyboard()
    with orm.db_session:
        categories = finances.get_fin_categories(admin.get_active_group(admin_id))
        for category in categories:
            if len(kb.buttons[-1]) == 2:
                kb.add_row()
            kb.add_text_button(
                category.name,
                payload={"button": "fin_category", "category": category.id},
            )
    if kb.buttons[-1]:
        kb.add_row()
    kb.add_text_button(
        "‚ûï –°–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
        payload={"button": "create_finances_category"},
    )
    kb.add_row()
    kb.add_text_button("‚óÄÔ∏è –ù–∞–∑–∞–¥", payload={"button": "main_menu"})

    return kb.get_keyboard()


def fin_category() -> JSONStr:
    """
    –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤.

    Returns:
        JSONStr: –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """
    kb = Keyboard()

    kb.add_text_button("üìà –î–æ—Ö–æ–¥", payload={"button": "add_income"})
    kb.add_text_button("üìâ –†–∞—Å—Ö–æ–¥", payload={"button": "add_expense"})
    kb.add_row()
    kb.add_text_button("üí∏ –î–æ–ª–∂–Ω–∏–∫–∏", payload={"button": "show_debtors"})
    kb.add_text_button("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", payload={"button": "show_stats"})
    kb.add_row()
    kb.add_text_button("–ù–∞—Å—Ç—Ä–æ–π–∫–∏", payload={"button": "finances_pref"})
    kb.add_row()
    kb.add_text_button("‚óÄÔ∏è –ù–∞–∑–∞–¥", payload={"button": "finances"})

    return kb.get_keyboard()


def fin_prefs() -> JSONStr:
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–Ω. –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.

    Returns:
        JSONStr: –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """
    kb = Keyboard()

    kb.add_text_button("–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å", payload={"button": "rename_fin_cat"})
    kb.add_text_button("–ò–∑–º–µ–Ω–∏—Ç—å —Å—É–º–º—É", payload={"button": "change_fin_sum"})
    kb.add_row()
    kb.add_text_button("–£–≤–µ–¥–æ–º–∏—Ç—å", payload={"button": "send_fin_alert"})
    kb.add_text_button("–£–¥–∞–ª–∏—Ç—å", payload={"button": "delete_fin_cat"})
    kb.add_row()
    kb.add_text_button("‚óÄÔ∏è –ù–∞–∑–∞–¥", payload={"button": "fin_category"})

    return kb.get_keyboard()
