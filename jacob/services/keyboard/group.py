from pony import orm
from vkwave.bots import Keyboard

from jacob.database.utils import lists, students
from jacob.services import keyboard as kbs
from jacob.services.keyboard.common import Keyboards, StudentsNavigator

JSONStr = str


class ListsKeyboards(Keyboards):
    """–ù–∞–±–æ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –°–ø–∏—Å–∫–æ–≤."""

    def __init__(self, admin_id: int, return_to: str, list_id: int):
        super().__init__(admin_id)
        self.return_to = return_to
        self.list_id = list_id

    def menu(self) -> JSONStr:
        """
        –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –°–ø–∏—Å–∫–æ–≤ (–ø–æ–ª–æ–≤–∏–Ω—ã –∞–ª—Ñ–∞–≤–∏—Ç–∞, —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å, –æ—Ç–º–µ–Ω–∏—Ç—å).

        Returns:
            JSONStr: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        """
        kb = kbs.common.alphabet(self.admin_id)
        if len(kb.buttons[-1]):
            kb.add_row()
        kb.add_text_button(text="‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", payload={"button": "save"})

        return kb.get_keyboard()

    def submenu(self, half: int) -> JSONStr:
        """
        –ü–æ–¥–º–µ–Ω—é –ø—Ä–∏–∑—ã–≤–∞ (—Å–ø–∏—Å–æ–∫ –±—É–∫–≤ –≤ —Ä–∞–º–∫–∞—Ö –ø–æ–ª–æ–≤–∏–Ω—ã –∞–ª—Ñ–∞–≤–∏—Ç–∞).

        Args:
            half: –∏–Ω–¥–µ–∫—Å –ø–æ–ª–æ–≤–∏–Ω—ã –∞–ª—Ñ–∞–≤–∏—Ç–∞

        Returns:
            JSONStr: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞

        """
        kb = super().submenu(half)
        return kb

    def students(self, letter: str) -> JSONStr:
        """
        –°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–∞ –±—É–∫–≤—É.

        Args:
            letter: –ü–µ—Ä–≤–∞—è –±—É–∫–≤–∞ —Ñ–∞–º–∏–ª–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤

        Returns:
            JSONStr: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞

        """
        with orm.db_session:
            data = students.get_list_of_students_by_letter(self.admin_id, letter)
            half_index = self._find_half_index_of_letter(letter)
            selected = lists.get_students_in_list(self.list_id)

            kb = Keyboard()
            for item in data:
                if len(kb.buttons[-1]) == 2:
                    kb.add_row()
                label = " "
                if item in selected:
                    label = "‚úÖ "
                kb.add_text_button(
                    text=f"{label}{item.last_name} {item.first_name}",
                    payload={
                        "button": "student",
                        "student_id": item.id,
                        "letter": letter,
                        "name": f"{item.last_name} {item.first_name}",
                    },
                )
        if kb.buttons[-1]:
            kb.add_row()
        kb.add_text_button(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
            payload={"button": "half", "half": half_index},
        )

        return kb.get_keyboard()


class ListNavigator(StudentsNavigator):
    def __init__(self, admin_id: int, list_id: int):
        super().__init__(admin_id)
        self.return_to = "edit_students_in_list"
        self.list_id = list_id

    def render(self) -> ListsKeyboards:
        return ListsKeyboards(self.admin_id, self.return_to, self.list_id)


def group_menu() -> JSONStr:
    kb = Keyboard()
    kb.add_text_button(
        "üë• –°—Ç—É–¥–µ–Ω—Ç—ã",
        payload={"button": "students"},
    )
    kb.add_text_button("üìÉ –°–ø–∏—Å–∫–∏", payload={"button": "lists"})
    kb.add_row()
    kb.add_text_button(
        text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
        payload={"button": "main_menu"},
    )

    return kb.get_keyboard()


@orm.db_session
def list_of_lists(group_id: int) -> JSONStr:
    kb = Keyboard()

    with orm.db_session:
        lists_of_group = lists.get_lists_of_group(group_id)

    for lst in lists_of_group:
        if len(kb.buttons[-1]) == 2:
            kb.add_row()
        kb.add_text_button(lst.name, payload={"button": "list", "list": lst.id})

    if kb.buttons[-1]:
        kb.add_row()

    kb.add_text_button(
        text="‚ûï –°–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫",
        payload={"button": "create_list"},
    )
    kb.add_row()
    kb.add_text_button(
        text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
        payload={"button": "group_mgmt"},
    )

    return kb.get_keyboard()


def list_menu() -> JSONStr:
    kb = Keyboard()

    kb.add_text_button("‚úè –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å", payload={"button": "rename_list"})
    kb.add_text_button(
        "üë• –°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤",
        payload={"button": "edit_students_in_list"},
    )
    kb.add_row()
    kb.add_text_button("üî• –£–¥–∞–ª–∏—Ç—å —Å–ø–∏—Å–æ–∫", payload={"button": "remove_list"})
    kb.add_row()
    kb.add_text_button(
        text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
        payload={"button": "lists"},
    )

    return kb.get_keyboard()
